entries:
- Name: '@azure/identity'
  Version: 1.3.0
  DisplayName: Identity
  ServiceName: Identity
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/blob/@azure/identity_1.3.0/sdk/identity/identity/CHANGELOG.md#130-2021-04-05
  ChangelogContent: |-
    #### Tracing Changes

    - Updated @azure/core-tracing to version `1.0.0-preview.11`. See [@azure/core-tracing CHANGELOG](https://github.com/Azure/azure-sdk-for-js/blob/master/sdk/core/core-tracing/CHANGELOG.md) for details about breaking changes with tracing.
- Name: '@azure/cosmos'
  Version: 3.10.6
  DisplayName: Cosmos DB
  ServiceName: Cosmos DB
  VersionType: Patch
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/blob/@azure/cosmos_3.10.6/sdk/cosmosdb/cosmos/CHANGELOG.md#3106-2021-04-14
  ChangelogContent: '- BUGFIX: Adds partitionKey parameter to `container.conflicts.delete`'
- Name: '@azure/synapse-artifacts'
  Version: 1.0.0-beta.4
  DisplayName: Synapse - Artifacts
  ServiceName: Synapse Analytics
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/blob/@azure/synapse-artifacts_1.0.0-beta.4/sdk/synapse/synapse-artifacts/CHANGELOG.md#100-beta4-2021-04-06
  ChangelogContent: |-
    - Adds ADF support
    - Consume latest Code Generator changes
- Name: '@azure/keyvault-certificates'
  Version: 4.2.0-beta.3
  DisplayName: Key Vault - Certificates
  ServiceName: Key Vault
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/blob/@azure/keyvault-certificates_4.2.0-beta.3/sdk/keyvault/keyvault-certificates/CHANGELOG.md#420-beta3-2021-04-06
  ChangelogContent: |-
    - Updated the Latest service version to 7.2.
    - Added a sample demonstrating how to import PFX / PEM certificates.
    - Fixed an issue where importing a certificate incorrectly required a Subject or Subject Alternative Name.
    - Improved tracing across the various KeyVault libraries. By switching to a consistent naming convention, ensuring spans are always closed appropriately, and setting the correct status when an operation errors developers can expect an improved experience when enabling distributed tracing.
      - We now ensure tracing spans are properly closed with an appropriate status when an operation throws an exception.
      - If a traced operation throws an exception we will now properly record the exception message in the tracing span.
      - Finally, naming conventions have been standardized across the KeyVault libraries taking the format of `Azure.KeyVault.<PACKAGE NAME>.<CLIENT NAME>`.
    - Fixed an issue where retrying a failed initial Key Vault request may result in an empty body.
- Name: '@azure/keyvault-keys'
  Version: 4.2.0-beta.5
  DisplayName: Key Vault - Keys
  ServiceName: Key Vault
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/blob/@azure/keyvault-keys_4.2.0-beta.5/sdk/keyvault/keyvault-keys/CHANGELOG.md#420-beta5-2021-04-06
  ChangelogContent: |-
    - Added local cryptography support for encryption / decryption for `A128CBCPAD`, `A192CBCPAD`, and `A256CBCPAD`.
    - For AES-CBC encryption we will now generate an IV if the user did not pass it in, making `iv` optional for those parameters.
    - Improved tracing across the various KeyVault libraries. By switching to a consistent naming convention, ensuring spans are always closed appropriately, and setting the correct status when an operation errors developers can expect an improved experience when enabling distributed tracing.
      - We now ensure tracing spans are properly closed with an appropriate status when an operation throws an exception.
      - If a traced operation throws an exception we will now properly record the exception message in the tracing span.
      - Finally, naming conventions have been standardized across the KeyVault libraries taking the format of `Azure.KeyVault.<PACKAGE NAME>.<CLIENT NAME>`.
    - Fixed an issue where retrying a failed initial Key Vault request may result in an empty body.
    - [Breaking] Removed the now unused `LocalCryptographyAlgorithmName` type (Added in 4.2.0-beta.1 to support `LocalCryptographyClient` and unused since 4.2.0-beta.4)
    - Updated `CryptographyClient` to ensure that any local cryptography error is properly handled. We will now try to perform the operation locally where we can but fallback to KeyVault if the local operation fails.
- Name: '@azure/event-hubs'
  Version: 5.5.0
  DisplayName: Event Hubs
  ServiceName: Event Hubs
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/blob/@azure/event-hubs_5.5.0/sdk/eventhub/event-hubs/CHANGELOG.md#550-2021-04-06
  ChangelogContent: |-
    - Updates the methods on the `CheckpointStore` interface to accept
      an optional `options` parameter that can be used to pass in an
      `abortSignal` and `tracingOptions`.

    #### New features:

    - Allows passing `NamedKeyCredential` and `SASCredential` as the credential type to `EventHubConsumerClient` and `EventHubProducerClient`.
      These credential types support rotation via their `update` methods and are an alternative to using the `SharedAccessKeyName/SharedAccessKey` or `SharedAccessSignature` properties in a connection string.

    #### Tracing updates

    - Tracing options for `EventDataBatch.tryAdd` now match the shape of `OperationOptions`.
- Name: '@azure/ai-form-recognizer'
  Version: 3.1.0-beta.3
  DisplayName: Form Recognizer
  ServiceName: Form Recognizer
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/blob/@azure/ai-form-recognizer_3.1.0-beta.3/sdk/formrecognizer/ai-form-recognizer/CHANGELOG.md#310-beta3-2021-04-06
  ChangelogContent: |-
    - Split `FormField` into several different interfaces. This should not cause any API compatibility issues except in certain edge cases (undefined `valueType`), but should result in more accurate type refinement when dealing with FormField values and should significantly improve documentation and code hinting of these values through IntelliSense.
    - Added support for recognizing identity documents (such as driver licenses and passports) through the `beginRecognizeIdDocuments` method and its URL-based counterpart `beginRecognizeIdDocumentsFromUrl`. The identity document model is prebuilt and may be used without training a model.
    - Introduced two new form field value types: `"gender"` and `"country"`. These value types appear in the identity document recognition responses.
      - The `"gender"` value type signifies the gender or sex of an individual and is represented by a string that is one of three values: "M", "F", or "X".
      - The `"country"` value type indicates a specific country and is represented by a three-letter country code string (ISO 3166-1 alpha-3).
    - Added support for the `pages` option to all form recognition methods (custom forms and all prebuilt models). This option works the same as in the content recognition methods, and allows for the specification of which pages within a multi-page document (PDF or TIFF formats) should be considered during analysis and included in the response.
    - Added support for a `readingOrder` option to the content recognition methods. This option enables you to control the algorithm that the service uses to determine how recognized lines of text should be ordered.
    - Custom model recognition now supports bitmap images through the "image/bmp" content-type (content recognition and all prebuilt models already support this content type).
    - Migrated to the 2.1-preview.3 Form Recognizer service endpoint for all REST API calls.
- Name: '@azure/web-pubsub-express'
  Version: 1.0.0-beta.1
  DisplayName: Azure Web Pubsub CloudEvents Handlers for Express
  ServiceName: Azure Web PubSub
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/blob/@azure/web-pubsub-express_1.0.0-beta.1/sdk/web-pubsub/web-pubsub-express/CHANGELOG.md#100-beta1-2021-04-23
  ChangelogContent: This is the first release of the @azure/web-pubsub-express package.
- Name: '@azure/web-pubsub'
  Version: 1.0.0-beta.1
  DisplayName: Azure Web Pubsub
  ServiceName: Azure Web PubSub
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/blob/@azure/web-pubsub_1.0.0-beta.1/sdk/web-pubsub/web-pubsub/CHANGELOG.md#100-beta1-2021-04-23
  ChangelogContent: This is the first release of the @azure/web-pubsub package.
- Name: '@azure/core-lro'
  Version: 1.0.5
  DisplayName: Core - LRO
  ServiceName: Core
  VersionType: Patch
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/blob/@azure/core-lro_1.0.5/sdk/core/core-lro/CHANGELOG.md#105-2021-04-12
  ChangelogContent: '- No functionality changes from 1.0.4. This release is to correct an issue where 1.0.4 shipped with modules in the wrong format (cjs instead of es6.)'
- Name: '@azure/data-tables'
  Version: 12.0.0-beta.2
  DisplayName: Tables
  ServiceName: Tables
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/blob/@azure/data-tables_12.0.0-beta.2/sdk/tables/data-tables/CHANGELOG.md#1200-beta2-2021-04-06
  ChangelogContent: |-
    - Update open-telemetry dependency to 1.0.0-rc.0 [#14208](https://github.com/Azure/azure-sdk-for-js/pull/14208)
    - Update @azure/core-client and @azure/core-rest-pipeline dependencies to 1.0.0 [#14318](https://github.com/Azure/azure-sdk-for-js/pull/14318)
- Name: '@azure/container-registry'
  Version: 1.0.0-beta.1
  DisplayName: Container Registry
  ServiceName: Container Registry
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/blob/@azure/container-registry_1.0.0-beta.1/sdk/containerregistry/container-registry/CHANGELOG.md#100-beta1-2021-04-06
  ChangelogContent: |-
    - Initial version of Azure Container Registry client SDK library.
    - This release is a preview of our efforts to create a client library that is user friendly and
      idiomatic to the JavaScript ecosystem. The reasons for most of the changes in this update can be found in the
      [Azure SDK Design Guidelines for TypeScript](https://azure.github.io/azure-sdk/typescript_introduction.html).
- Name: '@azure-rest/core-client'
  Version: 1.0.0-beta.1
  DisplayName: '@azure-rest/core-client'
  ServiceName: ""
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/blob/@azure-rest/core-client_1.0.0-beta.1/sdk/core-rest/core-client/CHANGELOG.md#100-beta1-2021-04-22
  ChangelogContent: '- First release of package, see README.md for details.'
- Name: '@azure-rest/ai-document-translator'
  Version: 1.0.0-beta.1
  DisplayName: '@azure-rest/ai-document-translator'
  ServiceName: ""
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/blob/@azure-rest/ai-document-translator_1.0.0-beta.1/sdk/documenttranslator/ai-document-translator-rest/CHANGELOG.md#100-beta1-2021-04-22
  ChangelogContent: '- First release of package, see README.md for details.'
- Name: '@azure/cosmos'
  Version: 3.11.0
  DisplayName: Cosmos DB
  ServiceName: Cosmos DB
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/blob/@azure/cosmos_3.11.0/sdk/cosmosdb/cosmos/CHANGELOG.md#3110-2021-04-21
  ChangelogContent: '- FEATURE: Internal client update. No user facing changes, but major version bump to be safe.'
- Name: '@azure/search-documents'
  Version: 11.2.0-beta.1
  DisplayName: Cognitive Search
  ServiceName: Search
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/blob/@azure/search-documents_11.2.0-beta.1/sdk/search/search-documents/CHANGELOG.md#1120-beta1-2021-04-06
  ChangelogContent: |-
    - Added Support for new skills such as `CustomEntityLookupSkill`, `DocumentExtractionSkill`, etc. Please refer [#14620](https://github.com/Azure/azure-sdk-for-js/pull/14620) for further details.
    - Added Support for new datasource `adlsgen2`. Please refer [#14620](https://github.com/Azure/azure-sdk-for-js/pull/14620) for further details.
    - Added Support for normalizers `LexicalNormalizer` & `CustomNormalizer`. Please refer [#14620](https://github.com/Azure/azure-sdk-for-js/pull/14620) for further details.
- Name: '@azure/keyvault-admin'
  Version: 4.0.0-beta.3
  DisplayName: Key Vault - Administration
  ServiceName: Key Vault
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/blob/@azure/keyvault-admin_4.0.0-beta.3/sdk/keyvault/keyvault-admin/CHANGELOG.md#400-beta3-2021-04-06
  ChangelogContent: |-
    - Updated the Latest service version to 7.2.
    - Long Running Operations will now use the `status` field to determine whether the operation failed.
    - Improved tracing across the various KeyVault libraries. By switching to a consistent naming convention, ensuring spans are always closed appropriately, and setting the correct status when an operation errors developers can expect an improved experience when enabling distributed tracing.
      - We now ensure tracing spans are properly closed with an appropriate status when an operation throws an exception.
      - If a traced operation throws an exception we will now properly record the exception message in the tracing span.
      - Finally, naming conventions have been standardized across the KeyVault libraries taking the format of `Azure.KeyVault.<PACKAGE NAME>.<CLIENT NAME>`.
    - Fixed an issue where retrying a failed initial Key Vault request may result in an empty body.
- Name: '@azure/keyvault-secrets'
  Version: 4.2.0-beta.4
  DisplayName: Key Vault - Secrets
  ServiceName: Key Vault
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/blob/@azure/keyvault-secrets_4.2.0-beta.4/sdk/keyvault/keyvault-secrets/CHANGELOG.md#420-beta4-2021-04-06
  ChangelogContent: |-
    - Improved tracing across the various KeyVault libraries. By switching to a consistent naming convention, ensuring spans are always closed appropriately, and setting the correct status when an operation errors developers can expect an improved experience when enabling distributed tracing.
      - We now ensure tracing spans are properly closed with an appropriate status when an operation throws an exception.
      - If a traced operation throws an exception we will now properly record the exception message in the tracing span.
      - Finally, naming conventions have been standardized across the KeyVault libraries taking the format of `Azure.KeyVault.<PACKAGE NAME>.<CLIENT NAME>`.
    - Fixed an issue where retrying a failed initial Key Vault request may result in an empty body.
- Name: '@azure/identity'
  Version: 2.0.0-beta.2
  DisplayName: Identity
  ServiceName: Identity
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/blob/@azure/identity_2.0.0-beta.2/sdk/identity/identity/CHANGELOG.md#200-beta2-2021-04-06
  ChangelogContent: |-
    - Breaking change: Renamed errors `CredentialUnavailable` to `CredentialUnavailableError`, and `AuthenticationRequired` to `AuthenticationRequiredError`, to align with the naming convention used for error classes in the Azure SDKs in JavaScript.
    - Added `clientId` to the `AuthenticationRecord` type, alongsides the `tenantId` that this interface already had. Together they can be used to re-authenticate after recovering a previously serialized `AuthenticationRecord`.
    - The `serialize()` method on the `AuthenticationRecord` object that allows an authenticated account to be stored as a string and re-used in another credential at any time, is removed in favor of a standalone function `serializeAuthenticationRecord` similar to how we have the `deserializeAuthenticationRecord` function.
    - `serializeAuthenticationRecord` now serializes into a JSON string with camel case properties. This makes it re-usable across languages.
    - Removed the interface `PersistentCredentialOptions` (introduced in `2.0.0-beta.1`) and instead inlined the options for the persistent cache feature in the options of individual credentials.
    - Added properties `scopes` and `getTokenOptions` to the AuthenticationRequired error. These properties hold the values used by the `getToken()` method on your credential to fetch the access token. You should pass these to the `authenticate()` method on your credential if you wanted to do manual authentication after catching the `AuthenticationRequired` error.
    - `InteractiveBrowserCredential` no longer supports [Implicit Grant Flow](https://docs.microsoft.com/azure/active-directory/develop/v2-oauth2-implicit-grant-flow) and will only support [Auth Code Flow](https://docs.microsoft.com/azure/active-directory/develop/v2-oauth2-auth-code-flow) instead. Therefore the `flow` option introduced in `1.2.4-beta.1` has been removed. More information from the documentation on Implicit Grant Flow:

    > With the plans for [third party cookies to be removed from browsers](https://docs.microsoft.com/azure/active-directory/develop/reference-third-party-cookies-spas), the **implicit grant flow is no longer a suitable authentication method**. The [silent SSO features](https://docs.microsoft.com/azure/active-directory/develop/v2-oauth2-implicit-grant-flow#getting-access-tokens-silently-in-the-background) of the implicit flow do not work without third party cookies, causing applications to break when they attempt to get a new token. We strongly recommend that all new applications use the authorization code flow that now supports single page apps in place of the implicit flow, and that [existing single page apps begin migrating to the authorization code flow](https://docs.microsoft.com/azure/active-directory/develop/migrate-spa-implicit-to-auth-code) as well.
- Name: '@azure/ai-anomaly-detector'
  Version: 3.0.0-beta.3
  DisplayName: Anomaly Detector
  ServiceName: Anomaly Detector
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/blob/@azure/ai-anomaly-detector_3.0.0-beta.3/sdk/anomalydetector/ai-anomaly-detector/CHANGELOG.md#300-beta3-2021-04-16
  ChangelogContent: '- Introduced the following new APIs related to Mutivariate Models:trainMultivariateModel, getMultivariateModel, deleteMultivariateModel, detectAnomaly, getDetectionResult, exportModel, listMultivariateModel, listMultivariateModelNext.'
- Name: '@azure/app-configuration'
  Version: 1.2.0-beta.1
  DisplayName: App Configuration
  ServiceName: App Configuration
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/blob/@azure/app-configuration_1.2.0-beta.1/sdk/appconfiguration/app-configuration/CHANGELOG.md#120-beta1-2021-04-06
  ChangelogContent: |-
    #### New Features

    - New `SecretReferenceConfigurationSetting` and `FeatureFlagConfigurationSetting`types to represent configuration settings that references KeyVault Secret reference and feature flag respectively.
      [#14342](https://github.com/Azure/azure-sdk-for-js/pull/14342)
    - Added `updateSyncToken` method to `AppConfigurationClient` to be able to provide external synchronization tokens.
      [#14507](https://github.com/Azure/azure-sdk-for-js/pull/14507)
- Name: '@azure/communication-phone-numbers'
  Version: 1.0.0
  DisplayName: Communication Phone Numbers
  ServiceName: Communication
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/blob/@azure/communication-phone-numbers_1.0.0/sdk/communication/communication-phone-numbers/CHANGELOG.md#100-2021-04-26
  ChangelogContent: '- Update version to 1.0.0'

