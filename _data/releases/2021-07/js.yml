entries:
- Name: '@azure/core-client'
  Version: 1.1.3
  DisplayName: Core - Client
  ServiceName: Core
  VersionType: Patch
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/core-client_1.1.3/sdk/core/core-client/CHANGELOG.md
  ChangelogContent: |-
    #### Key Bugs Fixed

    - Fix an issue of lost properties when flattening array in deserialization [issue 15653](https://github.com/azure/azure-sdk-for-js/issues/15653)
    - Fix an issue with appending query parameters while constructing the url. Please refer [Issue #1035](https://github.com/Azure/autorest.typescript/issues/1035) for more details.
- Name: '@azure/core-http'
  Version: 1.2.6
  DisplayName: Core - HTTP
  ServiceName: Core
  VersionType: Patch
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/core-http_1.2.6/sdk/core/core-http/CHANGELOG.md
  ChangelogContent: |-
    #### Key Bugs Fixed

    - Fixed an issue of lost properties when flattening array in deserialization [issue 15653](https://github.com/azure/azure-sdk-for-js/issues/15653)
    - Fixed an issue of incorrect minimum version of tslib [issue 15697](https://github.com/Azure/azure-sdk-for-js/issues/15697)
- Name: '@azure/core-tracing'
  Version: 1.0.0-preview.12
  DisplayName: Core - Tracing
  ServiceName: Core
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/core-tracing_1.0.0-preview.12/sdk/core/core-tracing/CHANGELOG.md
  ChangelogContent: |-
    - Update `@opentelemetry/api` to version 1.0.0 [PR #15883](https://github.com/Azure/azure-sdk-for-js/pull/15883)

    #### Breaking Changes

    - Removed `OpenCensusSpanWrapper` and `OpenCensusTracerWrapper` from the public API. Customers using these wrappers should migrate to using `OpenTelemetry` directly. [PR #15770](https://github.com/Azure/azure-sdk-for-js/pull/15770)
    - Update `@azure/core-tracing` to version 1.0.0-preview.12. This brings core-tracing up to date with `@opentelemetry/api@1.0.0`.
    - `Span#context` was renamed to `Span#spanContext`. This change is supported in `@azure/core-http@1.2.7`.
- Name: '@azure/core-rest-pipeline'
  Version: 1.1.0
  DisplayName: Core Rest Pipeline
  ServiceName: Core
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/core-rest-pipeline_1.1.0/sdk/core/core-rest-pipeline/CHANGELOG.md
  ChangelogContent: |-
    #### Fixed

    - Fixed an issue where `proxySettings` does not work when there is username but no password [Issue 15720](https://github.com/Azure/azure-sdk-for-js/issues/15720)

    #### Features Added

    - Added support for the `Retry-After` header on responses with status code 503, Service Unavailable.
    - The `ExponentialRetryPolicy` will now ignore `503` responses if they have the `Retry-After` header.
    - Added support for multiple retries on the `ThrottlingRetryPolicy` (up to 3 by default).

    #### Breaking Changes

    - Updated @azure/core-tracing to version `1.0.0-preview.12`. See [@azure/core-tracing CHANGELOG](https://github.com/Azure/azure-sdk-for-js/blob/main/sdk/core/core-tracing/CHANGELOG.md) for details about breaking changes with tracing.
- Name: '@azure/core-lro'
  Version: 2.0.0
  DisplayName: Core - LRO
  ServiceName: Core
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/core-lro_2.0.0/sdk/core/core-lro/CHANGELOG.md
  ChangelogContent: |-
    #### New Features

    - Changed TS compilation target to ES2017 in order to produce smaller bundles and use more native platform features
- Name: '@azure/core-client'
  Version: 1.2.1
  DisplayName: Core - Client
  ServiceName: Core
  VersionType: Patch
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/core-client_1.2.1/sdk/core/core-client/CHANGELOG.md
  ChangelogContent: |-
    #### Features Added

    - Moved `allowInsecureConnection` from `ServiceClientOptions` to `CommonClientOptions` [issue 15938](https://github.com/azure/azure-sdk-for-js/issues/15938)
- Name: '@azure/core-http'
  Version: 2.0.0
  DisplayName: Core - HTTP
  ServiceName: Core
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/core-http_2.0.0/sdk/core/core-http/CHANGELOG.md
  ChangelogContent: |-
    #### Features Added

    - Changed TS compilation target to ES2017 in order to produce smaller bundles and use more native platform features.
    - Added support for the `Retry-After` header on responses with status code 503, Service Unavailable.
    - Added support for multiple retries on the `ThrottlingRetryPolicy` (up to 3 by default).

    #### Breaking Changes

    - Updated @azure/core-tracing to version `1.0.0-preview.12`. See [@azure/core-tracing CHANGELOG](https://github.com/Azure/azure-sdk-for-js/blob/main/sdk/core/core-tracing/CHANGELOG.md) for details about breaking changes with tracing.

    #### Fixed

    - Fixed an issue where `proxySettings` does not work when there is username but no password [Issue 15720](https://github.com/Azure/azure-sdk-for-js/issues/15720)
    - Throttling retry policy respects abort signal [#15796](https://github.com/Azure/azure-sdk-for-js/issues/15796)
- Name: '@azure/core-auth'
  Version: 1.3.1
  DisplayName: Core - Auth
  ServiceName: Core
  VersionType: Patch
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/core-auth_1.3.1/sdk/core/core-auth/CHANGELOG.md
  ChangelogContent: "- Added `tenantId` optional property to the `GetTokenOptions` interface. If `tenantId` is set, credentials will be able to use multi-tenant authentication, in the cases when it's enabled."
- Name: '@azure/core-auth'
  Version: 1.3.2
  DisplayName: Core - Auth
  ServiceName: Core
  VersionType: Patch
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/core-auth_1.3.2/sdk/core/core-auth/CHANGELOG.md
  ChangelogContent: "- Added `tenantId` optional property to the `GetTokenOptions` interface. If `tenantId` is set, credentials will be able to use multi-tenant authentication, in the cases when it's enabled."
- Name: '@azure/ai-metrics-advisor'
  Version: 1.0.0
  DisplayName: Metrics Advisor
  ServiceName: Metrics Advisor
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/ai-metrics-advisor_1.0.0/sdk/metricsadvisor/ai-metrics-advisor/CHANGELOG.md
  ChangelogContent: |-
    The Metrics Advisor library is now in GA with this release.

    #### Breaking Changes

    - `listIncidents()` overloads split into `listInclidentsForAlert()` and `listIncidentsForDetectionConfiguration()`
    - `listAnomalies()` overloads split into `listAnomaliesForAlert()` and `listAnomaliesForDetectionConfiguration()`
    - Removed support for granularity type `PerSecond`
    - Renamed "createFeedback" to "addFeedback"
    - `seriesToFilter` parameter renamed to `seriesKey` in methods `getmetricenrichedseriesdata` and `getmetricseriesdata` and ordering updated
    - Renamed `adminEmails` to `admins` in `MetricsAdvisorDataFeed` and `NotificationHook` and `viewerEmails` to `viewers` in `MetricsAdvisorDataFeed`
    - Renamed type `DetectionConditionsOperator` to `DetectionConditionOperator`
    - Renamed property `splitAlertByDimension` to `dimensionsToSplitAlert` in `AnomalyAlertConfiguration`
    - Renamed `datasource` to `DataSource`
    - Renamed `DatasourceCredential` to `DataSourceCredentialEntity`, `SqlServerConnectionStringDataSourceCredential` to `DataSourceSqlConnectionString`,
    `DataLakeGen2SharedKeyDataSourceCredential` to `DataSourceDataLakeGen2SharedKey`,
    `ServicePrincipalDataSourceCredential` to `DataSourceServicePrincipal`,
    `ServicePrincipalInKeyVaultDataSourceCredential` to `DataSourceServicePrincipalInKeyVault`

    #### Other Changes

    - Update methods now return the updated object
- Name: '@azure/monitor-query'
  Version: 1.0.0-beta.3
  DisplayName: Monitor Query
  ServiceName: Monitor
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/monitor-query_1.0.0-beta.3/sdk/monitor/monitor-query/CHANGELOG.md
  ChangelogContent: |-
    #### Features Added

    - The `include-render` header can now be specified via `QueryLogsOption.includeVisualization`, allowing
    visualization information to be returned in `QueryLogsResult.visualization`. The results are currently
    unmodeled and reflect the underlying JSON structure.
- Name: '@azure/app-configuration'
  Version: 1.2.0
  DisplayName: App Configuration
  ServiceName: App Configuration
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/app-configuration_1.2.0/sdk/appconfiguration/app-configuration/CHANGELOG.md
  ChangelogContent: "#### Features Added\r\n\r\n- Special configuration settings - feature flag and secret reference are now supported. \U0001F389\r\n\r\n- For types, use `ConfigurationSetting<FeatureFlagValue>` and `ConfigurationSetting<SecretReferenceValue>`.\r\n- Use `parseFeatureFlag` and `parseSecretReference` methods to parse the configuration settings into feature flag and secret reference respectively.\r\n\r\n- With the dropping of support for Node.js versions that are no longer in LTS, the dependency on `@types/node` has been updated to version 12. Read our [support policy](https://github.com/Azure/azure-sdk-for-js/blob/main/SUPPORT.md) for more details."
- Name: '@azure/ai-text-analytics'
  Version: 5.1.0
  DisplayName: Text Analytics
  ServiceName: Text Analytics
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/ai-text-analytics_5.1.0/sdk/textanalytics/ai-text-analytics/CHANGELOG.md
  ChangelogContent: |-
    #### Breaking Changes

    - `PiiEntityDomainType` was renamed to `PiiEntityDomain`.
    - `domain` property of `RecognizePiiEntitiesAction` was renamed to `domainFilter`.
    - `beginAnalyzeActions` is now limited to accept up to one action only per type.
- Name: '@azure/identity-vscode'
  Version: 1.0.0-beta.1
  DisplayName: Identity Visual Studio Code Credential
  ServiceName: Identity
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/identity-vscode_1.0.0-beta.1/sdk/identity/identity-vscode/CHANGELOG.md
  ChangelogContent: |-
    #### New features

    - This release marks the initial beta availability of the `@azure/identity-vscode` package. This package extends `@azure/identity` by providing the dependencies of `VisualStudioCodeCredential` and enabling it within the `@azure/identity` package. `VisualStudioCodeCredential` uses the authenticated session from the "Azure Account" extension in Visual Studio Code. If this extension package is not loaded using `useIdentityExtension`, then `VisualStudioCodeCredential` from `@azure/identity` will throw a `CredentialUnavailableError`. By enabling `VisualStudioCodeCredential`, the `DefaultAzureCredential` class in `@azure/identity` also gains functionality allowing it to use the "Azure Account" session if it is available.
- Name: '@azure/web-pubsub'
  Version: 1.0.0-beta.3
  DisplayName: Web PubSub
  ServiceName: Web PubSub
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/web-pubsub_1.0.0-beta.3/sdk/web-pubsub/web-pubsub/CHANGELOG.md
  ChangelogContent: |-
    #### Breaking Changes

    - `hasUser` has been removed from `GroupClient` as that operation is no longer supported by the service.
    - Updated to have void returns for most operations. If you were previously using `RestResponse`, you can instead use the `onResponse` callback in the operation options. See README for an example.
- Name: '@azure/identity-cache-persistence'
  Version: 1.0.0-beta.1
  DisplayName: Identity Cache Persistence
  ServiceName: Identity
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/identity-cache-persistence_1.0.0-beta.1/sdk/identity/identity-cache-persistence/CHANGELOG.md
  ChangelogContent: |-
    #### New features

    - This release marks the initial beta availability of the `@azure/identity-cache-persistence` package. This package provides an extension to `@azure/identity` that enables persistent token caching in a secure storage defined by the Operating System (caching of token values across sessions), which allows skipping interactive authentication flows if a previously-cached token is still available. This is implemented using the following technologies:
    - On Windows, the cache will use a DPAPI-protected file.
    - On macOS, the cache will use the macOS Keychain.
    - On Linux, the cache will use `libsecret` to store the tokens (this will use a provider backend, e.g. GNOME Keyring).
    - On Linux and macOS, the cache may optionally use an unencrypted file as a last resort, but only if the `allowUnencryptedStorage` property is set to true in the `tokenCachePersistenceOptions` passed to the credential constructor.
- Name: '@azure/identity'
  Version: 2.0.0-beta.4
  DisplayName: Identity
  ServiceName: Identity
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/identity_2.0.0-beta.4/sdk/identity/identity/CHANGELOG.md
  ChangelogContent: |-
    #### Breaking Changes

    - Removed the protected method `getAzureCliAccessToken` from the public API of the `AzureCliCredential`. While it will continue to be available as part of v1, we won't be supporting this method as part of v2's public API.

    #### Features Added
    - With the dropping of support for Node.js versions that are no longer in LTS, the dependency on `@types/node` has been updated to version 12. Read our [support policy](https://github.com/Azure/azure-sdk-for-js/blob/main/SUPPORT.md) for more details.
    - Introduced an extension API through a top-level method `useIdentityExtension`. The function accepts an "extension" as an argument, which is a function accepting a `context`. The extension context is an internal part of the Azure Identity API, so it has an `unknown` type. Two new packages are designed to be used with this API:
    - `@azure/identity-vscode`, which provides the dependencies of `VisualStudioCodeCredential` and enables it (see more below).
    - `@azure/identity-cache-persistence`, which provides persistent token caching (same as was available in version 2.0.0-beta.2, but now provided through a secondary extension package).
    - Reintroduced a stub implementation of `VisualStudioCodeCredential`. If the `@azure/identity-vscode` extension is not used, then it will throw a `CredentialUnavailableError` (similar to how it previously behaved if the `keytar` package was not installed). The extension now provides the underlying implementation of `VisualStudioCodeCredential` through dependency injection.
    - Reintroduced the `TokenCachePersistenceOptions` property on most credential constructor options. This property must be present with an `enabled` property set to true to enable persistent token caching for a credential instance. Credentials that do not support persistent token caching do not have this property.
    - Added support to `ManagedIdentityCredential` for Bridge to Kubernetes local development authentication.
    - Enabled PKCE on `InteractiveBrowserCredential` for Node.js. [Proof Key for Code Exchange (PKCE)](https://datatracker.ietf.org/doc/html/rfc7636) is a security feature that mitigates authentication code interception attacks.
    - Added `LoginHint` property to `InteractiveBrowserCredentialOptions` which allows a user name to be pre-selected for interactive logins. Setting this option skips the account selection prompt and immediately attempts to login with the specified account.
    - Added regional STS support to client credential types.
    - Added the `RegionalAuthority` type, that allows specifying Azure regions.
    - Added `regionalAuthority` property to `ClientSecretCredentialOptions` and `ClientCertificateCredentialOptions`.
    - If instead of a region, `AutoDiscoverRegion` is specified as the value for `regionalAuthority`, MSAL will be used to attempt to discover the region.
    - A region can also be specified through the `AZURE_REGIONAL_AUTHORITY_NAME` environment variable.
    - `AzureCliCredential` and `AzurePowerShellCredential` now allow specifying a `tenantId`.
    - All credentials except `ManagedIdentityCredential` support enabling multi tenant authentication via the `allowMultiTenantAuthentication` option.

    #### Key Bugs Fixed

    - Fixed an issue in which `InteractiveBrowserCredential` on Node would sometimes cause the process to hang if there was no browser available.
    - Fixed an issue in which the `AZURE_AUTHORITY_HOST` environment variable was not properly picked up in NodeJS.
- Name: '@azure/keyvault-keys'
  Version: 4.3.0-beta.1
  DisplayName: Key Vault - Keys
  ServiceName: Key Vault
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/keyvault-keys_4.3.0-beta.1/sdk/keyvault/keyvault-keys/CHANGELOG.md
  ChangelogContent: |-
    #### Features Added

    - With the dropping of support for Node.js versions that are no longer in LTS, the dependency on `@types/node` has been updated to version 12. Read our [support policy](https://github.com/Azure/azure-sdk-for-js/blob/main/SUPPORT.md) for more details.
    - Added support for `KeyClient.getRandomBytes` which, when connected to a managed HSM, can be used to generate a byte array of a given length with random values.
    - Updated the service version to 7.3-preview.

    #### Key Bugs Fixed

    - Fixed an issue where `CryptographyClient.signData` and `CryptographyClient.verifyData` convenience methods would fail to find a valid hashing algorithm when using Elliptic Curve keys.
- Name: '@azure/keyvault-admin'
  Version: 4.1.0-beta.1
  DisplayName: Key Vault - Administration
  ServiceName: Key Vault
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/keyvault-admin_4.1.0-beta.1/sdk/keyvault/keyvault-admin/CHANGELOG.md
  ChangelogContent: |-
    #### Features Added

    - With the dropping of support for Node.js versions that are no longer in LTS, the dependency on `@types/node` has been updated to version 12. Read our [support policy](https://github.com/Azure/azure-sdk-for-js/blob/main/SUPPORT.md) for more details.
- Name: '@azure/data-tables'
  Version: 12.1.0
  DisplayName: Tables
  ServiceName: Tables
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/data-tables_12.1.0/sdk/tables/data-tables/CHANGELOG.md
  ChangelogContent: |-
    #### Features Added

    - With the dropping of support for Node.js versions that are no longer in LTS, the dependency on `@types/node` has been updated to version 12. Read our [support policy](https://github.com/Azure/azure-sdk-for-js/blob/main/SUPPORT.md) for more details.
    - Support for Azure Active Directory (AAD) authorization has been added to `TableServiceClient` and `TableClient`. This enables use of `TokenCredential` credentials. Note: Only Azure Storage API endpoints currently support AAD authorization. [#15852](https://github.com/Azure/azure-sdk-for-js/pull/15852)
- Name: '@azure/search-documents'
  Version: 11.3.0-beta.1
  DisplayName: Cognitive Search
  ServiceName: Search
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/search-documents_11.3.0-beta.1/sdk/search/search-documents/CHANGELOG.md
  ChangelogContent: |-
    - With the dropping of support for Node.js versions that are no longer in LTS, the dependency on `@types/node` has been updated to version 12. Read our [support policy](https://github.com/Azure/azure-sdk-for-js/blob/main/SUPPORT.md) for more details.

    - Regenerated the search SDK with the latest swaggers that includes the following changes:

    - Support for `TokenCredential` has been added. With this addition, the Search SDK supports authentication via AAD.
    - Identity types - `SearchIndexerDataNoneIdentity` & `SearchIndexerDataUserAssignedIdentity` have been added.
    - The following new skills have been added:
    - SentimentSkill(V3)
    - EntityLinkingSkill(V3)
    - EntityRecognitionSkill(V3)
    - PIIDetectionSkill
    - A new property `lineEnding` has been added to the skill `OcrSkill`.
- Name: '@azure/service-bus'
  Version: 7.3.0
  DisplayName: Service Bus
  ServiceName: Service Bus
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/service-bus_7.3.0/sdk/servicebus/service-bus/CHANGELOG.md
  ChangelogContent: |-
    #### Features Added

    - With the dropping of support for Node.js versions that are no longer in LTS, the dependency on `@types/node` has been updated to version 12. Read our [support policy](https://github.com/Azure/azure-sdk-for-js/blob/main/SUPPORT.md) for more details.

    #### Key Bugs Fixed

    - Fixed a bug that could lead to message loss  in certain conditions when using `receiver.receiveMessages()`.
    [PR#15989](https://github.com/Azure/azure-sdk-for-js/pull/15989)
- Name: '@azure/event-hubs'
  Version: 5.6.0
  DisplayName: Event Hubs
  ServiceName: Event Hubs
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/event-hubs_5.6.0/sdk/eventhub/event-hubs/CHANGELOG.md
  ChangelogContent: |-
    #### Features Added

    - With the dropping of support for Node.js versions that are no longer in LTS, the dependency on `@types/node` has been updated to version 12. Read our [support policy](https://github.com/Azure/azure-sdk-for-js/blob/main/SUPPORT.md) for more details.

    - Adds the `contentType`, `correlationId`, and `messageId` AMQP properties as top-level fields on `EventData` and `ReceivedEventData`.

    - Enable encoding the body of a message to the 'value' or 'sequence' sections (via AmqpAnnotatedMessage.bodyType). Using this encoding is not required but does allow you to take advantage of native AMQP serialization for supported primitives or sequences.

    More information about the AMQP message body type can be found in the AMQP specification: [link](https://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#section-message-format)
- Name: '@azure/keyvault-keys'
  Version: 4.2.2
  DisplayName: Key Vault - Keys
  ServiceName: Key Vault
  VersionType: Patch
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/keyvault-keys_4.2.2/sdk/keyvault/keyvault-keys/CHANGELOG.md
  ChangelogContent: |-
    #### Key Bugs Fixed

    - Fixed an issue where `CryptographyClient.signData` and `CryptographyClient.verifyData` convenience methods would fail to find a valid hashing algorithm when using Elliptic Curve keys.
- Name: '@azure/keyvault-keys'
  Version: 4.2.1
  DisplayName: Key Vault - Keys
  ServiceName: Key Vault
  VersionType: Patch
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/keyvault-keys_4.2.1/sdk/keyvault/keyvault-keys/CHANGELOG.md
  ChangelogContent: |-
    #### Bug Fixes

    - Fixed an issue where bundling could fail when importing this library due to an incorrectly set import.
- Name: '@azure/keyvault-keys'
  Version: 4.2.0
  DisplayName: Key Vault - Keys
  ServiceName: Key Vault
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/keyvault-keys_4.2.0/sdk/keyvault/keyvault-keys/CHANGELOG.md
  ChangelogContent: |-
    #### New Features

    - Added support for local cryptography operations. If supported by the key type and algorithm, the `CryptographyClient` will attempt to perform a cryptography operation locally.
    - Added support for symmetric keys in Managed HSMs including support for AES encryption algorithms to encrypt, decrypt, wrap, and unwrap using symmetric keys.
    - Added support for the 7.2 version of the Key Vault service API.

    #### Bug Fixes

    - Fixed a bug with `beginDeleteKey` and `beginRecoverDeletedKey` in which unknown service errors wouldn't bubble up properly to the end users.
    - Fixed bug with the list operations which were returning misplaced properties. Fixes customer issue: [15353](https://github.com/Azure/azure-sdk-for-js/issues/15353).
    - Fixed an issue where retrying a failed initial Key Vault request may result in an empty body.

    #### Changes since 4.2.0-beta.5:

    - Removed the now obsolete `KeyOperationsOptions` and replaced it with `CryptographyOptions`.
    - Introduced in 4.2.0-beta.1 to support additional encryption parameters for AES encryption, we have since moved these parameters outside of the options bag so a separate `KeyOperationsOptions` is now redundant.
    - Fixed a bug with `beginDeleteKey` and `beginRecoverDeletedKey` in which unknown service errors wouldn't bubble up properly to the end users.
    - Fixed bug with the list operations which were returning misplaced properties. Fixes customer issue: [15353](https://github.com/Azure/azure-sdk-for-js/issues/15353).
    - Exported a method to parse Key Vault Key Ids: `parseKeyVaultKeyIdentifier`.
- Name: '@azure/keyvault-certificates'
  Version: 4.2.0
  DisplayName: Key Vault - Certificates
  ServiceName: Key Vault
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/keyvault-certificates_4.2.0/sdk/keyvault/keyvault-certificates/CHANGELOG.md
  ChangelogContent: |-
    #### Bug Fixes

    - Fixed an issue with `beginDeleteCertificate` and `beginRecoverDeletedCertificate` in which unknown service errors wouldn't bubble up properly to the end users.
    - Fixed an issue where importing a certificate incorrectly required a Subject or Subject Alternative Name.
    - Fixed an issue where retrying a failed initial Key Vault request may result in an empty body.
    - Marked `ErrorModel` as deprecated. It was erroneously exported publicly in 4.1 and should not be used. Please change the type to use `CertificateOperationError` instead.

    #### Changes since 4.2.0-beta.3

    - Marked `ErrorModel` as deprecated. It was erroneously exported publicly in 4.1 and should not be used. Please change the type to use `CertificateOperationError` instead.
    - Fixed a bug with `beginDeleteCertificate` and `beginRecoverDeletedCertificate` in which unknown service errors wouldn't bubble up properly to the end users.
    - Renamed the `KeyVaultCertificateId` to `KeyVaultCertificateIdentifier`, and exported a method to parse Key Vault Certificate Ids: `parseKeyVaultCertificateIdentifier`.
- Name: '@azure/monitor-query'
  Version: 1.0.0-beta.2
  DisplayName: Monitor Query
  ServiceName: Monitor
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/monitor-query_1.0.0-beta.2/sdk/monitor/monitor-query/CHANGELOG.md
  ChangelogContent: |-
    - Fixing issue using non-commercial clouds, where it wasn't possible to pass in an endpoint and custom
    scope, both of which are needed.
    [PR#15705](https://github.com/Azure/azure-sdk-for-js/pull/15705)
    - Adding a mitigation for LogsQueryClient.queryLogsBatch() where an invalidly encoded response could lead
    to no results being surfaced to the user. This should allow for the result to be properly parsed.
    [PR#15718](https://github.com/Azure/azure-sdk-for-js/pull/15718)
- Name: '@azure/cosmos'
  Version: 3.12.0
  DisplayName: Cosmos DB
  ServiceName: Cosmos DB
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/cosmos_3.12.0/sdk/cosmosdb/cosmos/CHANGELOG.md
  ChangelogContent: |-
    #### Features Added
    - With the dropping of support for Node.js versions that are no longer in LTS, the dependency on `@types/node` has been updated to version 12. Read our [support policy](https://github.com/Azure/azure-sdk-for-js/blob/main/SUPPORT.md) for more details.
    - Added background refresher for endpoints, and new `ConnectionPolicy` options. Refreshing defaults to true, and the default refresh rate is every 5 minutes.
    ```js
    const client = new CosmosClient({
    endpoint,
    key: masterKey,
    connectionPolicy: {
    ...defaultConnectionPolicy,
    endpointRefreshRateInMs: 700,
    enableBackgroundEndpointRefreshing: true
    }
    })
    ```

    - Added `client.dispose()` for closing the endpoint refresher verbosely. Necessary when destroying the CosmosClient inside existing processes like an express web server, or when you want to destroy the client and create a new one in the same process.
    ```js
    const client = new CosmosClient()
    client.dispose() // cancels background endpoint refreshing
    ```
- Name: '@azure/keyvault-secrets'
  Version: 4.2.0
  DisplayName: Key Vault - Secrets
  ServiceName: Key Vault
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/keyvault-secrets_4.2.0/sdk/keyvault/keyvault-secrets/CHANGELOG.md
  ChangelogContent: |-
    #### New Features

    - Added support for the 7.2 version of the Key Vault service API.

    #### Bug Fixes

    - Fixed a bug with `beginDeleteSecret` and `beginRecoverDeletedSecret` in which unknown service errors wouldn't bubble up properly to the end users.
    - Fixed an issue where retrying a failed initial Key Vault request may result in an empty body.
    - Added a `certificateKeyId?: string` secret property to use instead of the deprecated `keyId?: URL` and removed `"lib": ["dom"]` from `tsconfig.json`

    #### Changes since 4.2.0-beta.4:

    - Fixed a bug with `beginDeleteSecret` and `beginRecoverDeletedSecret` in which unknown service errors wouldn't bubble up properly to the end users.
    - Renamed the `KeyVaultSecretId` to `KeyVaultSecretIdentifier`, and exported a method to parse Key Vault Secret Ids: `parseKeyVaultSecretIdentifier`.
- Name: '@azure/attestation'
  Version: 1.0.0-beta.4
  DisplayName: Attestation
  ServiceName: Attestation
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/attestation_1.0.0-beta.4/sdk/attestation/attestation/CHANGELOG.md
  ChangelogContent: |-
    #### Key Bugs Fixed

    - Fixes the location of types definition in package.json


    #### Features Added

    - The package now contains type definitions compatible with TypeScript versions earlier than v3.6.
- Name: '@azure/keyvault-admin'
  Version: 4.0.1
  DisplayName: Key Vault - Administration
  ServiceName: Key Vault
  VersionType: Patch
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/keyvault-admin_4.0.1/sdk/keyvault/keyvault-admin/CHANGELOG.md
  ChangelogContent: |-
    #### Bug Fixes

    - Fixed an issue where bundling could fail when importing this library due to an incorrectly set import.
- Name: '@azure/keyvault-admin'
  Version: 4.0.0
  DisplayName: Key Vault - Administration
  ServiceName: Key Vault
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/keyvault-admin_4.0.0/sdk/keyvault/keyvault-admin/CHANGELOG.md
  ChangelogContent: |-
    This release marks the general availability of the `@azure/keyvault-admin` package.

    #### New Features

    - The `KeyVaultAccessControlClient` provides support for managing role-based access control (RBAC) operations.
    - Both role assignments and custom role definitions are supported with the ability to create, read, update, and delete custom role definitions and assignments.
    - The `KeyVaultBackupClient` provides support for back up and restore operations for the entire Key Vault Managed HSM instance.
    - Full Managed HSM backup and restore operations are supported.
    - Selective Key Restore from a previous backup is also supported.

    #### Changes since 4.0.0-beta.3:

    - Added the "KeyVault" prefix to all of the Key Vault Admin client operations.
    - Made the AesGcmDecryptParameters authenticationTag required.
    - Collapsed `KeyVaultRoleAssignmentPropertiesWithScope` to `KeyVaultRoleAssignmentProperties`.
    - Renamed `KeyVaultKeyId` to `KeyVaultKeyIdentifier`.
    - Renamed `beginRestore`'s `blobStorageUri` to `folderUri`.
    - Removed `folderName` from `beginRestore`. Now the folder name will be inferred from the `folderUri`.
    - Renamed `beginSelectiveRestore`'s `blobStorageUri` to `folderUri`.
    - Removed `folderName` from `beginSelectiveRestore`. Now the folder name will be inferred from the `folderUri`.
    - Reordered the parameters of `beginSelectiveRestore` to `keyName`, `folderUrl`, `sasToken`, `[options]`.
    - Renamed `KeyVaultBackupResult`'s `backupFolderUri` to `folderUri`.
    - Renamed `beginSelectiveRestore` to `beginSelectiveKeyRestore`.
    - Renamed `KeyVaultBeginSelectiveRestoreOptions` to `KeyVaultBeginSelectiveKeyRestoreOptions`.
    - Renamed `KeyVaultSelectiveRestoreOperationState` to `KeyVaultSelectiveKeyRestoreOperationState`.
    - Renamed `KeyVaultSelectiveRestoreResult` to `KeyVaultSelectiveKeyRestoreResult`.
    - `deleteRoleAssignment` and `deleteRoleDefinition` will no longer throw an exception when the resource no longer exist and return no result.
- Name: '@azure/identity'
  Version: 1.4.0
  DisplayName: Identity
  ServiceName: Identity
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-js/tree/@azure/identity_1.4.0/sdk/identity/identity/CHANGELOG.md
  ChangelogContent: |-
    - With this release, we drop support for Node.js versions that have reached the end of life, like Node.js 8. Read our [support policy](https://github.com/Azure/azure-sdk-for-js/blob/main/SUPPORT.md) for more details.
    - Updated the default timeout of the first request of the IMDS MSI from half a second to three seconds to compensate for the slowness caused by `node-fetch` for initial requests in specific environments, like Kubernetes pods.
    - Upgraded `@azure/core-http` to version `^2.0.0`, and `@azure/core-tracing` to version `1.0.0-preview.12`.

