entries:
- Name: Azure.Security.KeyVault.Keys
  Version: 4.2.0
  DisplayName: Key Vault - Keys
  ServiceName: Key Vault
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-net/tree/Azure.Security.KeyVault.Keys_4.2.0/sdk/keyvault/Azure.Security.KeyVault.Keys/CHANGELOG.md
  ChangelogContent: |-
    #### Features Added

    - Changed default service version to "7.2".
    - Added `KeyVaultKeyIdentifier` to parse certificate URIs.
    - Added local-only support for `CryptographyClient` using only a `JsonWebKey` using `LocalCryptographyClientOptions`.
    - Added `CreateEcKeyOptions` class and associated `KeyClient.CreateEcKey` and `CreateEcKeyAsync` methods.
    - Added `KeyType.OctHsm` to support "oct-HSM" key operations to support Managed HSM.
    - Added AES-GCM and AES-CBC support for encrypting and decrypting, including new `Encrypt` and `Decrypt` overloads.

    #### Breaking Changes since 4.2.0-beta.6

    - Renamed `additionalAuthenticationData` factory method parameters to `additionalAuthenticatedData` to match properties and constructor parameters.
    - Renamed `parameters` parameter to `decryptParameters` for `CryptographyClient.Decrypt` and `DecryptAsync`.
    - Renamed `parameters` parameter to `encryptParameters` for `CryptographyClient.Encrypt` and `EncryptAsync`.
- Name: Azure.Security.KeyVault.Secrets
  Version: 4.2.0
  DisplayName: Key Vault - Secrets
  ServiceName: Key Vault
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-net/tree/Azure.Security.KeyVault.Secrets_4.2.0/sdk/keyvault/Azure.Security.KeyVault.Secrets/CHANGELOG.md
  ChangelogContent: |-
    #### Features Added

    - Changed default service version to "7.2".
    - Added `KeyVaultSecretIdentifier` to parse certificate URIs.
- Name: Azure.Messaging.EventGrid
  Version: 4.4.0
  DisplayName: Event Grid
  ServiceName: Event Grid
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-net/tree/Azure.Messaging.EventGrid_4.4.0/sdk/eventgrid/Azure.Messaging.EventGrid/CHANGELOG.md
  ChangelogContent: |-
    #### Features Added
    - Added public constructor and settable property for `SubscriptionValidationResponse`.

    #### Key Bugs Fixed
    - Fix issue where ARM system event data could not be deserialized into their strongly typed models.
- Name: Azure.Security.KeyVault.Administration
  Version: 4.0.0
  DisplayName: Key Vault - Administration
  ServiceName: Key Vault
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-net/tree/Azure.Security.KeyVault.Administration_4.0.0/sdk/keyvault/Azure.Security.KeyVault.Administration/CHANGELOG.md
  ChangelogContent: |-
    - Initial release of `KeyVaultAccessControlClient` to managed role assignments and definitions for Managed HSM.
    - Initial release of `KeyVaultBackupClient` to backup and restore Managed HSM.

    #### Breaking Changes since 4.0.0-beta.5

    - Changed `KeyVaultBackupClient.StartSelectiveRestore` and `StartSelectiveRestoreAsync` to `StartSelectiveKeyRestore` and `StartSelectiveKeyRestoreAsync`.
    - Return only a `Response` from `KeyVaultAccessControlClient.DeleteRoleAssignment` and `DeleteRoleAssignmentAsync`. HTTP 404 responses no longer throw a `RequestFailedException`.
    - Return only a `Response` from `KeyVaultAccessControlClient.DeleteRoleDefinition` and `DeleteRoleDefinitionAsync`. HTTP 404 responses no longer throw a `RequestFailedException`.
- Name: Azure.Core.Amqp
  Version: 1.1.0
  DisplayName: Core - AMQP
  ServiceName: Core
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-net/tree/Azure.Core.Amqp_1.1.0/sdk/core/Azure.Core.Amqp/CHANGELOG.md
  ChangelogContent: |-
    #### Added
    - General availability for Sequence and Value body messages.
- Name: Azure.Security.KeyVault.Certificates
  Version: 4.2.0
  DisplayName: Key Vault - Certificates
  ServiceName: Key Vault
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-net/tree/Azure.Security.KeyVault.Certificates_4.2.0/sdk/keyvault/Azure.Security.KeyVault.Certificates/CHANGELOG.md
  ChangelogContent: |-
    #### Features Added

    - Changed default service version to "7.2".
    - Added `KeyVaultCertificateIdentifier` to parse certificate URIs.
    - Added `CertificateClient.DownloadCertificate` and `DownloadCertificateAsync` to download an `X509Certificate2` with private key.
- Name: Microsoft.Azure.Messaging.EventGrid.CloudNativeCloudEvents
  Version: 1.0.0-beta.2
  DisplayName: 'CloudNative CloudEvents with Event Grid '
  ServiceName: eventgrid
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-net/tree/Microsoft.Azure.Messaging.EventGrid.CloudNativeCloudEvents_1.0.0-beta.2/sdk/eventgrid/Microsoft.Azure.Messaging.EventGrid.CloudNativeCloudEvents/CHANGELOG.md
  ChangelogContent: |-
    #### Features Added

    - Updated to use the GA version of CloudEvents SDK.
- Name: Azure.Messaging.ServiceBus
  Version: 7.2.0
  DisplayName: Service Bus
  ServiceName: Service Bus
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-net/tree/Azure.Messaging.ServiceBus_7.2.0/sdk/servicebus/Azure.Messaging.ServiceBus/CHANGELOG.md
  ChangelogContent: |-
    #### Acknowledgments
    Thank you to our developer community members who helped to make the Service Bus client library better with their contributions to this release:

    - Jason Dryhurst-Smith _([GitHub](https://github.com/jasond-s))_
    - Oscar Cabrero _([GitHub](https://github.com/oscarcabrero))_

    #### Fixed

    - The retry policy used by clients will no longer overflow the `TimeSpan` maximum when using an `Exponential` strategy with a large number of retries and long delay set.

    - The name of the property displayed in the `ArgumentOutOfRangeException` in the `MaxDeliveryCount` property in `SubscriptionProperties` was updated to use the correct property name.  (A community contribution, courtesy of _[oscarcabrero](https://github.com/oscarcabrero))_
- Name: Microsoft.Azure.WebJobs.Extensions.ServiceBus
  Version: 5.0.0-beta.4
  DisplayName: WebJobs Extensions - Service Bus
  ServiceName: WebJobs
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-net/tree/Microsoft.Azure.WebJobs.Extensions.ServiceBus_5.0.0-beta.4/sdk/servicebus/Microsoft.Azure.WebJobs.Extensions.ServiceBus/CHANGELOG.md
  ChangelogContent: |-
    #### Added
    - Added `AutoCompleteMessages` property to `ServiceBusTriggerAttribute` which allows configuring autocompletion at the function level.

    #### Key Bug Fixes
    - Fix binding for DateTime parameters
    - Avoid exception that occurred when a function settles messages and `AutoCompleteMessages` is true for multiple dispatch functions.
    - Avoid null reference exception that could occur when no messages are available for a multiple dispatch function.
- Name: Azure.Storage.Blobs
  Version: 12.9.1
  DisplayName: Storage - Blobs
  ServiceName: Storage
  VersionType: Patch
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-net/tree/Azure.Storage.Blobs_12.9.1/sdk/storage/Azure.Storage.Blobs/CHANGELOG.md
  ChangelogContent: '- Added optimization to unwrap encryption key once for DownloadTo and OpenRead when Client Side Encryption is enabled.'
- Name: Azure.Core
  Version: 1.16.0
  DisplayName: Core
  ServiceName: Core
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-net/tree/Azure.Core_1.16.0/sdk/core/Azure.Core/CHANGELOG.md
  ChangelogContent: |-
    #### Changed

    - Added `TenantId` to the properties on `TokenRequestContext` to enable multi-tenant support in Azure.Identity.
- Name: Azure.Core.Amqp
  Version: 1.2.0
  DisplayName: Core - AMQP
  ServiceName: Core
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-net/tree/Azure.Core.Amqp_1.2.0/sdk/core/Azure.Core.Amqp/CHANGELOG.md
  ChangelogContent: |-
    #### Added
    - All section properties of the `AmqpAnnotatedMessage` are now lazily allocated to reflect that they are defined as optional in the AMQP specification, section 3.2.

    - The `HasSection` method has been added to `AmqpAnnotatedMessage` to allow inspecting the property for a section to determine if it is populated without triggering an allocation.
- Name: Azure.Data.Tables
  Version: 12.1.0
  DisplayName: Tables
  ServiceName: Tables
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-net/tree/Azure.Data.Tables_12.1.0/sdk/tables/Azure.Data.Tables/CHANGELOG.md
  ChangelogContent: |-
    #### Features Added

    - Support for Azure Active Directory (AAD) authorization has been added to `TableServiceClient` and `TableClient`. This enables use of `TokenCredential` credentials. Note: Only Azure Storage API endpoints currently support AAD authorization.
- Name: Azure.Messaging.EventHubs
  Version: 5.5.0
  DisplayName: Event Hubs
  ServiceName: Event Hubs
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-net/tree/Azure.Messaging.EventHubs_5.5.0/sdk/eventhub/Azure.Messaging.EventHubs/CHANGELOG.md
  ChangelogContent: |-
    #### Acknowledgments

    Thank you to our developer community members who helped to make the Event Hubs client libraries better with their contributions to this release:

    - Daniel Marbach _([GitHub](https://github.com/danielmarbach))_

    #### Changes

    ##### Features Added

    - The `EventData` type offers a curated set of the information available for messages using the AMQP protocol.  While this results in a simpler and more easily understood API surface for an event, it limits interoperability with other message brokers.  To support heterogeneous environments or those with specialized needs, the full AMQP message is now available using the `GetRawAmqpMessage` method.  _(Based on a community prototype contribution, courtesy of [danielmarbach](https://github.com/danielmarbach))_

    - `EventData` now supports construction using a `string` to specify the event body; this will be represented as a set of UTF-8 encoded bytes for transport.

    - `EventData` has been extended to include properties for applications to assign a `MessageId`, `ContentType`, and `CorrelationId` as well-known members rather than embedding them in the `Properties` dictionary.  It is important to note that these properties are intended for application use and are not recognized by the Event Hubs service.

    -  When stopping, the `EventProcessor<TPartition>` will now attempt to force-close the connection to the Event Hubs service to abort in-process read operations blocked on their timeout.  This should significantly help reduce the amount of time the processor takes to stop in many scenarios. _(Based on a community prototype contribution, courtesy of [danielmarbach](https://github.com/danielmarbach))_

    - When the `EventProcessor<TPartition>` detects a partition being stolen outside of a load balancing cycle, it will immediately surrender ownership rather than waiting for a load balancing cycle to confirm the ownership change.  This will help reduce event duplication from overlapping ownership of processors.

    - The `EventProcessor<TPartition>` now exposes the `ListPartitionIdsAsync` method, allowing custom processors to control the set of partitions known to the processor.  This can be used to reduce complexity when a custom processor is directly assigned a set of partitions to process rather than using load balancing to control ownership.

    - The `ConnectionOptions` available when creating client types now support registering a callback delegate for participating in the validation of SSL certificates when connections are established.  This delegate may override the built-in validation and allow or deny certificates based on application-specific logic.

    - The `ConnectionOptions` available when creating client types now support setting a custom size for the send and receive buffers of the transport.

    - Additional verbose logging has been added to allow monitoring of lower-level AMQP operations such as creating links, terminal exceptions that fault a link without an active operation, and when the service force-closes links.

    ##### Key Bugs Fixed

    - The `EventProcessor<TPartition>` will now properly respect another another consumer stealing ownership of a partition when the service forcibly terminates the active link in the background.  Previously, the client did not observe the error directly and attempted to recover the faulted link which reasserted ownership and caused the partition to "bounce" between owners until a load balancing cycle completed.

    - The `EventProcessor<TPartition>` will now be less aggressive when considering whether or not to steal a partition, doing so only when it will correct an imbalance and preferring the status quo when the overall distribution would not change.  This will help reduce event duplication due to partitions moving between owners.

    - The `EventHubConsumerClient` and `PartitionReceiver` will now properly surface an exception when another another consumer stealing ownership of a partition when the service forcibly terminates the active link in the background.  Previously, the client did not observe the error directly and did not make callers attempted to recover the faulted link which reasserted ownership and caused the partition to "bounce" between owners until a load balancing cycle completed.

    - The retry policy used by clients will no longer overflow the `TimeSpan` maximum when using an `Exponential` strategy with a large number of retries and long delay set.
- Name: Azure.AI.Translation.Document
  Version: 1.0.0-beta.3
  DisplayName: Document Translation
  ServiceName: Translator
  VersionType: Beta
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-net/tree/Azure.AI.Translation.Document_1.0.0-beta.3/sdk/translation/Azure.AI.Translation.Document/CHANGELOG.md
  ChangelogContent: |-
    #### Breaking changes

    - Renamed property `DocumentId` to `Id`in `DocumentStatusResult`.
    - Renamed property `TranslationId` to `Id`in `TranslationStatusResult`
    - Renamed type `TranslationStatusResult` to `TranslationStatus`.
    - Renamed type `DocumentStatusResult` to `DocumentStatus`.
    - Renamed enum `TranslationStatus` to `DocumentTranslationStatus`.
    - Renamed method `GetDocumentFormats` to `GetSupportedDocumentFormats`.
    - Renamed method `GetGlossaryFormats` to `GetSupportedGlossaryFormats`.
    - Removed property `HasCompleted` from types `DocumentStatusResult` and `TranslationStatusResult`.
- Name: Azure.AI.TextAnalytics
  Version: 5.1.0
  DisplayName: Text Analytics
  ServiceName: Text Analytics
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-net/tree/Azure.AI.TextAnalytics_5.1.0/sdk/textanalytics/Azure.AI.TextAnalytics/CHANGELOG.md
  ChangelogContent: |-
    #### Breaking changes
    - Changed behavior in `StartAnalyzeActions` and `StartAnalyzeActionsAsync` where now accepts a single action per action type. An `ArgumentException` is raised if duplicate actions are passed.
    - Changed type `RecognizePiiEntitiesOptions.DomainFilter` from `PiiEntityDomainType?` to `PiiEntityDomainType`.
    - Changed type `AnalyzeActionsOptions.IncludeStatistics` from `bool` to `bool?`.
    - Renamed `StartAnalyzeBatchActions` to `StartAnalyzeActions`.
    - Renamed `AnalyzeBatchActionsOperation` to `AnalyzeActionsOperation`.
    - Renamed `AnalyzeBatchActionsResult` to `AnalyzeActionsResult`.
    - Renamed `AnalyzeBatchActionsOptions` to `AnalyzeActionsOptions`.
    - `TextAnalyticsActions` now takes `xxAction` types, instead of `xxOptions` types. Renames and types are as follow:
    - `ExtractKeyPhrasesOptions` changed to new type `ExtractKeyPhrasesActions`.
    - `RecognizeEntitiesOptions` changed to new type `RecognizeEntitiesActions`.
    - `RecognizePiiEntitiesOptions` changed to new type `RecognizePiiEntitiesActions`.
    - `RecognizeLinkedEntitiesOptions` changed to new type `RecognizeLinkedEntitiesActions`.
    - `AnalyzeSentimentOptions` changed to new type `AnalyzeSentimentActions`.
    - Renamed type `TextAnalyticsActionDetails` to `TextAnalyticsActionResult`.
    - Renamed type `PiiEntityDomainType` to `PiiEntityDomain`.
    - Renamed type `Results` to `DocumentsResults` in `AnalyzeSentimentActionResult`, `ExtractKeyPhrasesActionResult`, `RecognizeEntitiesActionResult`, `RecognizeLinkedEntitiesActionResult`, and `RecognizePiiEntitiesActionResult`.
    - Renamed all types under `AnalyzeActionsResult` from `xxActionsResults` to ``xxResults`.
    - Removed property `Statistics` from `AnalyzeActionsResult` as it is not currently returned by the service even if the user passes `IncludeStatistics  = true`.
    - Removed property `StringIndexType` from `TextAnalyticsRequestOptions`. This SDK will keep using `UTF-16` code unit as the default encoding.
    - Removed type `ExtractKeyPhrasesOptions` and respective exposure.
    - Removed type `RecognizeEntitiesOptions` and respective exposure.
    - Removed type `RecognizeLinkedEntitiesOptions` and respective exposure.
- Name: Azure.Data.AppConfiguration
  Version: 1.1.0
  DisplayName: App Configuration
  ServiceName: App Configuration
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-net/tree/Azure.Data.AppConfiguration_1.1.0/sdk/appconfiguration/Azure.Data.AppConfiguration/CHANGELOG.md
  ChangelogContent: |-
    #### Breaking Changes

    - The `GetConfigurationSettingAsync` overload that takes an instance of `MatchConditions` temporary removed.
- Name: Azure.Messaging.EventHubs.Processor
  Version: 5.5.0
  DisplayName: Event Hubs - Event Processor
  ServiceName: Event Hubs
  VersionType: GA
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-net/tree/Azure.Messaging.EventHubs.Processor_5.5.0/sdk/eventhub/Azure.Messaging.EventHubs.Processor/CHANGELOG.md
  ChangelogContent: |-
    #### Acknowledgments

    Thank you to our developer community members who helped to make the Event Hubs client libraries better with their contributions to this release:

    - Daniel Marbach _([GitHub](https://github.com/danielmarbach))_

    #### Changes

    ##### Features Added

    -  When stopping, the `EventProcessorClient` will now attempt to force-close the connection to the Event Hubs service to abort in-process read operations blocked on their timeout.  This should significantly help reduce the amount of time the processor takes to stop in many scenarios. _(Based on a community prototype contribution, courtesy of [danielmarbach](https://github.com/danielmarbach))_

    - When the `EventProcessorClient` detects a partition being stolen outside of a load balancing cycle, it will immediately surrender ownership rather than waiting for a load balancing cycle to confirm the ownership change.  This will help reduce event duplication from overlapping ownership of processors.

    - The `ConnectionOptions` available when creating a processor now support registering a callback delegate for participating in the validation of SSL certificates when connections are established.  This delegate may override the built-in validation and allow or deny certificates based on application-specific logic.

    - The `ConnectionOptions` available when creating a processor now support setting a custom size for the send and receive buffers of the transport.

    ##### Key Bugs Fixed

    - The `EventProcessorClient` will now properly respect another another consumer stealing ownership of a partition when the service forcibly terminates the active link in the background.  Previously, the client did not observe the error directly and attempted to recover the faulted link which reasserted ownership and caused the partition to "bounce" between owners until a load balancing cycle completed.

    - The  `EventProcessorClient` will now be less aggressive when considering whether or not to steal a partition, doing so only when it will correct an imbalance and preferring the status quo when the overall distribution would not change.  This will help reduce event duplication due to partitions moving between owners.
- Name: Azure.Messaging.ServiceBus
  Version: 7.2.1
  DisplayName: Service Bus
  ServiceName: Service Bus
  VersionType: Patch
  Hidden: false
  ChangelogUrl: https://github.com/Azure/azure-sdk-for-net/tree/Azure.Messaging.ServiceBus_7.2.1/sdk/servicebus/Azure.Messaging.ServiceBus/CHANGELOG.md
  ChangelogContent: |-
    #### Fixed
    - Fixed bug in the `ServiceBusProcessor` where message locks stopped being automatically renewed after `StopProcessingAsync` was called.

