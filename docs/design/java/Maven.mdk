## Maven

~ Must {#java-maven-use-parent-pom}
explicitly specify the Azure Java SDK parent POM file for all client libraries. Using the parent POM file enables centralized dependency and build tool management.
~

~ Must {#java-maven-groupid}
specify the `groupId` as `com.azure`.
~

~ Must {#java-maven-artifactid}
specify the `artifactId` to be of the form `azure-<group>-<service>`, for example, `azure-storage-blob`. In cases where the client library has multiple children modules, use `azure-<group>-<service>-parent`.
~

~ Must {#java-maven-name}
specify the `name` element to take the form `Microsoft Azure client library for <service name>`.
~

~ Must {#java-maven-description}
set the `description` element to `This package contains the Microsoft Azure <service> client library`.
~

~ Must {#java-maven-url}
specify the `url` element to point to the root of the GitHub repository containing the source code.  Normally, the `url` element will be the [azure/azure-sdk-for-java](https://github.com/azure/azure-sdk-for-java) mono-repo.
~

~ Must {#java-maven-scm}
specify where the source code for the client library is in the `scm` section. If the source code is located in the [azure/azure-sdk-for-java](https://github.com/azure/azure-sdk-for-java) mono-repo, then the following form must be used:

```
<scm>
    <url>scm:git:https://github.com/Azure/azure-sdk-for-java</url>
    <connection>scm:git:git@github.com:Azure/azure-sdk-for-java.git</connection>
    <tag>HEAD</tag>
</scm>
```
~

~ MustNot {#java-maven-developers}
change the `developers` section of the POM file - it must only list a developer `id` of `microsoft` and a `name` of `Microsoft Corporation`.
~

~ MustNot {#java-maven-developers-no-one-else}
include additional names to represent the developers involved in the project.
~