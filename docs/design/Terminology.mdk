## Terminology {#general-terminology}

Throughout these documents, the following terms should be understood:

Azure SDK
  ~ The collection of _client libraries_ for a single target language, used for accessing Azure services.
Azure Core
  ~ A dependency of many service-related client libraries.  The Azure Core library provides access to the HTTP pipeline, common credential types, and other types that are appropriate to the Azure SDK as a whole.
Client Library
  ~ A library (and associated tools, documentation, and samples) that _consumers_ use to ease working with an Azure service.  There is generally a client library per Azure service and per target language.  Sometimes a single client library will contain the ability to connect to multiple services.
Consumer
  ~ Where appropriate to disambiguate between the various types of developers, we use the term _consumer_ to indicate the developer who is using a client library in an app to connect to an Azure service.
Docstring
  ~ The comments embedded within the code that describe the API surface being implemented.  The _docstrings_ are extracted and post-processed during the build to generate API reference documentation.
Library Developer
  ~ Where appropriate to disambiguate between the various types of developers, we use the term _library developer_ to indicate the developer who is writing a client library.
Package
  ~ A client library after is has been packaged for distribution to consumers.
Package Repository
  ~ Each client library is published separately to the appropriate language-specific package repository.  For example, we distribute JavaScript libraries to npmjs.org, and Python libraries to PyPI.  These releases are performed exclusively by the Azure SDK engineering systems team.
  