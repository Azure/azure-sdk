# Open Source {#general-oss}

~ Must {#github-open-source}
ensure that all library code is public and open-source on GitHub. Library code must be in the Azure SDK 'mono-repo' for its language:

* [Azure SDK for .NET](https://github.com/Azure/azure-sdk-for-net)
* [Azure SDK for Java](https://github.com/Azure/azure-sdk-for-java)
* [Azure SDK for JavaScript](https://github.com/Azure/azure-sdk-for-js)
* [Azure SDK for Python](https://github.com/Azure/azure-sdk-for-python)
~

~ Should {#github-be-open}
develop in the open on GitHub. Seek feedback from the community on design choices and be active in conversations with the community.
~

~ Must {#github-active}
remain active in GitHub. Your client library is your primary touch point with the developer community, so it's important to keep up with the activity there.
Issues and pull requests on GitHub must have an authoritative comment within one week of filing.
~

~ Should {#github-review-open-source-guidelines}
review the Microsoft Open Source Guidelines' [community section](https://docs.opensource.microsoft.com/releasing/foster-your-community.html) for more information on fostering a healthy open-source community.
~

~ Must {#github-cla}
 use the [Microsoft CLA](https://cla.opensource.microsoft.com/). Microsoft makes significant contributions to [cla-assistant](https://cla-assistant.io/). It is the easiest way to ensure the CLA is signed by all contributors.
~

~ Must {#github-source-headers}
 include a copyright header at the top of every source file. See the [Microsoft Open Source Guidelines](https://docs.opensource.microsoft.com/releasing/copyright-headers.html) for example headers in various languages.
~

## README.md {#general-readme}

~ Must {#github-readme}
include a `README.md` in the client library folder within the repository. The `README.md` should follow the readme template that matches the language based off of the [general template](https://github.com/Azure/azure-sdk/blob/master/docs/README-TEMPLATE.md):

* [.NET](https://github.com/Azure/azure-sdk-for-net/tree/master/sdk/template/Azure.Template)
* [Java](https://github.com/Azure/azure-sdk-for-java/tree/master/sdk/template/azure-sdk-template)
* [Python](https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/template/azure-template)
* [TypeScript](https://github.com/Azure/azure-sdk-for-js/tree/master/sdk/template/template)
~

## CONTRIBUTING.md

~ Must {#github-contributing}
include `CONTRIBUTING.md` file in your GitHub repository, using it to describe the process by which contributors can make contributions to the project.  An example `CONTRIBUTING.md` is provided by the [Microsoft Open Source Guidelines](https://docs.opensource.microsoft.com/releasing/overview.html):

```
# Contributing

This project welcomes contributions and suggestions. Most contributions require you to
agree to a Contributor License Agreement (CLA) declaring that you have the right to,
and actually do, grant us the rights to use your contribution. For details, visit
https://cla.microsoft.com.

When you submit a pull request, a CLA-bot will automatically determine whether you need
to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the
instructions provided by the bot. You will only need to do this once across all repositories using our CLA.

This project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).
For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/)
or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.
```
~

~ Must {#github-contributing-extra}
include any relevant processes and procedures must be documented, such as:

- Prerequisites for successfully building and testing
- How to run builds and tests
- Generating reference documentation and other reports (linters, code coverage, etc.)
~

## LICENSE

~ Must {#github-license}
include a `LICENSE` file containing your license text (which by default should be the [standard MIT license](https://docs.opensource.microsoft.com/releasing/overview.html#license-files)).
~

## CODEOWNERS

CODEOWNERS is a GitHub standard to specify who is automatically assigned pull requests to review. This helps prevent pull requests from languishing without review. GitHub can also be configured to require review from code owners before a pull request can be merged. Further reading is available from the following two URLs:

- [https://blog.github.com/2017-07-06-introducing-code-owners/](https://blog.github.com/2017-07-06-introducing-code-owners/)
- [https://help.github.com/articles/about-codeowners/](https://help.github.com/articles/about-codeowners/)

~ Must {#github-codeowners}
edit the root-level CODEOWNERS file to ensure that it is updated to redirect all pull requests for the directory of the client library to point to the relevant engineers of this component. If the client library will exist within its own repository, then a CODEOWNERS file must be introduced and configured appropriately.
~