# This document describes Azure SDK semantic conventions for tracing in [OpenTelemetry format](https://github.com/open-telemetry/build-tools/blob/main/semantic-conventions/syntax.md).
# DO NOT add new conventions - use [OpenTelemetry conventions](https://github.com/open-telemetry/opentelemetry-specification/tree/main/semantic_conventions), but it's ok to extend existing ones.
# Version: 0.1.0

groups:
  # common
  - id: azure-sdk
    brief: 'Describes Azure SDK spans.'
    attributes:
      - id: az.namespace
        required: always
        type: string
        brief: '[Namespace](https://docs.microsoft.com/azure/azure-resource-manager/management/azure-services-resource-providers) of Azure service request is made against.'
        examples: ['Microsoft.Storage', 'Microsoft.KeyVault', 'Microsoft.ServiceBus']

  # public API
  - id: azure-sdk.api
    span_kind: internal
    extends: azure-sdk
    brief: 'Describes Azure SDK API calls spans.'
    note: 'Represents public surface API calls that wrap an Azure service call.'

  # http
  - id: azure-sdk.http
    extends: azure-sdk
    span_kind: client
    brief: 'Describes HTTP client spans created per HTTP request (try).'
    note: >
      This conventions follows [OpenTelemetry HTTP](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/http.md)
      but omits all optional attributes, providing only `http.url` to describe destination. It adds request-id attributes supported by Azure services.
    attributes:
      - ref: http.method
      - ref: http.url
      - ref: http.status_code
      - id: az.client_request_id
        type: string
        requirement_level:
          conditionally_required: only if present
        brief: 'Value of the [x-ms-client-request-id] header (or other request-id header, depending on the service) sent by the client.'
        examples: ['eb178587-c05a-418c-a695-ae9466c5303c']
      - id: az.service_request_id
        type: string
        requirement_level:
          conditionally_required: if and only if one was received
        brief: 'Value of the [x-ms-request-id]  header (or other request-id header, depending on the service) sent by the server in response.'
        examples: ['3f828ae5-ecb9-40ab-88d9-db0420af30c6']
    constraints:
      - include: http.client #https://github.com/open-telemetry/opentelemetry-specification/blob/main/semantic_conventions/trace/http.yaml

  # messaging
  - id: azure-sdk.messaging
    brief: 'Describes Azure messaging SDKs spans.'
    extends: azure-sdk
    attributes:
      - ref: messaging.system
        sampling_relevant: true
        examples: ['eventhubs', 'servicebus']
      - ref: net.peer.name
        sampling_relevant: true
        brief: 'Fully qualified Azure messaging service name.'
        examples: 'http://myEventHubNamespace.servicebus.windows.net/'
      - ref: messaging.destination
        sampling_relevant: true
        brief: 'Name of the messaging entity within namespace: e.g EventHubs name, ServiceBus queue or topic name.'
        examples: ['myqueue', 'myhub']
    constraints:
      - include: messaging #https://github.com/open-telemetry/opentelemetry-specification/blob/main/semantic_conventions/trace/messaging.yaml

  - id: azure-sdk.messaging.producer
    span_kind: producer
    extends: azure-sdk.messaging
    brief: 'Describes producer span created per message.'

  - id: azure-sdk.messaging.send
    span_kind: client
    extends: azure-sdk.messaging
    brief: 'Describes Azure messaging SDKs producer client spans.'
    note: 'Contains links to all messages contexts being sent.'

  - id: azure-sdk.messaging.process
    span_kind: consumer
    extends: azure-sdk.messaging
    brief: 'Describes consumption span.'
    note: >
      Contains links to all messages contexts being consumed. Each link has attribute `enqueuedTime` (with `long` type)
      attribute with unix epoch time with milliseconds precision representing when message was enqueued.

  # db
  - id: azure-sdk.cosmos
    span_kind: client
    brief: 'Describes Azure CosmosDB spans.'
    note: >
      Events with additional debug info are added for long running operations.
    extends: azure-sdk
    attributes:
      - ref: net.peer.name
        requirement_level: required
        sampling_relevant: true
        brief: 'Fully qualified database service name.'
        examples: ['https://my-cosmos.documents.azure.com']
      - ref: net.peer.port
        requirement_level: 
        conditionally_required: if using a port other than the default port for this DBMS.
        sampling_relevant: true
        brief: 'Database port'
        examples: 443
      - ref: db.operation
        type: string
        requirement_level: required
        sampling_relevant: true
        brief: 'Database statement'
        examples: ['createContainerIfNotExists.myContainer']
      - ref: db.name
        requirement_level: required
        sampling_relevant: true
        brief: 'Database name'
        examples: ['mydb']
      - ref: db.system
        requirement_level: required
        sampling_relevant: true
        brief: 'Database type'
        examples: ['cosmosdb']
    constraints:
      - include: db #https://github.com/open-telemetry/opentelemetry-specification/blob/main/semantic_conventions/trace/database.yaml
